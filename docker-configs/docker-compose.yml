version: '3'

services:
  mongo:
    image: mongo:6.0.2
    container_name: mongo
    restart: always
    volumes:
      - ./dbdata:/data/db
      - ./mongobackups:/var/backups/mongobackups
    ports:
      - 27017:27017
    networks:
      - cardano-node-net
      #- bworksnet

  redis:
    image: redis:6.2-alpine
    container_name: redis
    restart: always
    ports:
      - 6379:6379
    networks:
      - cardano-node-net
      #- bworksnet

  nginx:
    image: 121427815363.dkr.ecr.ap-southeast-1.amazonaws.com/bworks:frontend-testnet
    #image: jackchuong/itl:bworks-frontend-testnet
    container_name: nginx
    ports:
      - 80:80
      - 443:443
    env_file:
      - .env
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d/:/etc/nginx/conf.d/
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
    command: "/bin/sh -c 'while :; do sleep 24h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    networks:
      - cardano-node-net
      #- bworksnet

  homepage:
    image: jackchuong/itl:bworks-homepage-rundirect
    container_name: homepage
    restart: always
    #ports:
    #  - 8000:8000
    #command: "/bin/sh -c 'npm start'"
    networks:
      - cardano-node-net
      #- bworksnet

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 24h & wait $${!}; done;'"
    networks:
      - cardano-node-net
      #- bworksnet

  api:
    image: 121427815363.dkr.ecr.ap-southeast-1.amazonaws.com/bworks:api-testnet
    #image: jackchuong/itl:bworks-api-testnet
    container_name: api
    ports:
      - 3000:3000
    restart: always
    environment:
      - TZ=Asia/Ho_Chi_Minh # for ex : "Asia/Ho_Chi_Minh"
      - CARDANO_NODE_SOCKET_PATH=/ipc/node.socket
      - CARDANO_CLI=/cardano-wallet/cardano-cli
      - TESTNET_MAGIC=1
      - DOCKER_CLIENT_TIMEOUT=120
      - COMPOSE_HTTP_TIMEOUT=120
      - NETWORK=preprod
    env_file:
      - .env
    volumes:
      - /home/ec2-user/Run-cardano-node-on-docker/cardano-node-ipc:/ipc:ro
      #- /home/ec2-user/bworks_2.0_deploy/docker-configs/cardano-node-ipc:/ipc
      - /home/ec2-user/Run-cardano-node-on-docker/cardano-wallet:/cardano-wallet:ro
    command: "/bin/sh -c 'cd /app/api ; node dist/main'"
    networks:
      - cardano-node-net
      #- bworksnet

networks:
  cardano-node-net:
    external: true
  #bworksnet:
